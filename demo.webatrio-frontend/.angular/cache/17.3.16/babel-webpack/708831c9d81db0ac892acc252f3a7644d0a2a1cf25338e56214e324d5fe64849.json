{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PersonneService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/personnes';\n  }\n  obtenirToutesPersonnes() {\n    return this.http.get(this.apiUrl);\n  }\n  obtenirPersonneParId(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  creerPersonne(personne) {\n    return this.http.post(this.apiUrl, personne);\n  }\n  supprimerPersonne(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function PersonneService_Factory(t) {\n      return new (t || PersonneService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PersonneService,\n      factory: PersonneService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["PersonneService","constructor","http","apiUrl","obtenirToutesPersonnes","get","obtenirPersonneParId","id","creerPersonne","personne","post","supprimerPersonne","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\samyl\\Desktop\\Web-Atrio-Test\\demo.webatrio-frontend\\src\\app\\services\\personne.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Personne } from '../models/personne.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonneService {\r\n  private apiUrl = 'http://localhost:8080/api/personnes';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  obtenirToutesPersonnes(): Observable<Personne[]> {\r\n    return this.http.get<Personne[]>(this.apiUrl);\r\n  }\r\n\r\n  obtenirPersonneParId(id: number): Observable<Personne> {\r\n    return this.http.get<Personne>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  creerPersonne(personne: Personne): Observable<any> {\r\n    return this.http.post(this.apiUrl, personne);\r\n  }\r\n\r\n  supprimerPersonne(id: number): Observable<any> {\r\n    return this.http.delete(`${this.apiUrl}/${id}`);\r\n  }\r\n} "],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,qCAAqC;EAEd;EAExCC,sBAAsBA,CAAA;IACpB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAa,IAAI,CAACF,MAAM,CAAC;EAC/C;EAEAG,oBAAoBA,CAACC,EAAU;IAC7B,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACxD;EAEAC,aAAaA,CAACC,QAAkB;IAC9B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,MAAM,EAAEM,QAAQ,CAAC;EAC9C;EAEAE,iBAAiBA,CAACJ,EAAU;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACU,MAAM,CAAC,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,CAAC;EACjD;;;uBAnBWP,eAAe,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfhB,eAAe;MAAAiB,OAAA,EAAfjB,eAAe,CAAAkB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}