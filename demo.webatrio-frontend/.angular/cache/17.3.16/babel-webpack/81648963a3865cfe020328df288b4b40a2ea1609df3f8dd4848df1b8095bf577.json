{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/personne.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../liste-emplois/liste-emplois.component\";\nconst _c0 = a0 => [\"/emploi/nouveau\", a0];\nfunction ListePersonnesComponent_a_16_ng_container_6_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const emploi_r4 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", emploi_r4.titrePoste, \" chez \", emploi_r4.nomEntreprise, \" \");\n  }\n}\nfunction ListePersonnesComponent_a_16_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ListePersonnesComponent_a_16_ng_container_6_span_1_Template, 2, 2, \"span\", 14);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const personne_r2 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", personne_r2.emploisActuels);\n  }\n}\nfunction ListePersonnesComponent_a_16_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \" Aucun emploi actuel \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListePersonnesComponent_a_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 11);\n    i0.ɵɵlistener(\"click\", function ListePersonnesComponent_a_16_Template_a_click_0_listener() {\n      const personne_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.selectionnerPersonne(personne_r2));\n    });\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 8);\n    i0.ɵɵtemplate(6, ListePersonnesComponent_a_16_ng_container_6_Template, 2, 1, \"ng-container\", 12)(7, ListePersonnesComponent_a_16_span_7_Template, 2, 0, \"span\", 13);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const personne_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", ctx_r2.personneSelectionnee && ctx_r2.personneSelectionnee.id === personne_r2.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", personne_r2.nom, \" \", personne_r2.prenom, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", personne_r2.age, \" ans\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", personne_r2.emploisActuels && personne_r2.emploisActuels.length > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !personne_r2.emploisActuels || personne_r2.emploisActuels.length === 0);\n  }\n}\nfunction ListePersonnesComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 17)(2, \"div\", 18)(3, \"h3\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"a\", 19);\n    i0.ɵɵtext(6, \" Ajouter un emploi \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 20)(8, \"div\", 21)(9, \"p\")(10, \"strong\");\n    i0.ɵɵtext(11, \"Date de naissance:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵpipe(13, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"p\")(15, \"strong\");\n    i0.ɵɵtext(16, \"\\u00C2ge:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"h4\");\n    i0.ɵɵtext(19, \"Tous les emplois\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"app-liste-emplois\", 22);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    let tmp_5_0;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\"D\\u00E9tails de \", ctx_r2.personneSelectionnee.prenom, \" \", ctx_r2.personneSelectionnee.nom, \"\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(9, _c0, ctx_r2.personneSelectionnee.id));\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(13, 6, ctx_r2.personneSelectionnee.dateNaissance, \"dd/MM/yyyy\"), \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.personneSelectionnee.age, \" ans\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"personneId\", (tmp_5_0 = ctx_r2.personneSelectionnee.id) !== null && tmp_5_0 !== undefined ? tmp_5_0 : null);\n  }\n}\nexport class ListePersonnesComponent {\n  constructor(personneService) {\n    this.personneService = personneService;\n    this.personnes = [];\n    this.personneSelectionnee = null;\n  }\n  ngOnInit() {\n    // S'abonner aux mises à jour des personnes\n    this.personneService.personnes$.subscribe(personnes => {\n      console.log('Mise à jour des personnes reçue:', personnes);\n      this.personnes = this.trierPersonnes(personnes);\n      // Si une personne était sélectionnée, mettre à jour sa version\n      if (this.personneSelectionnee) {\n        const personneActualisee = personnes.find(p => p.id === this.personneSelectionnee?.id);\n        if (personneActualisee) {\n          this.personneSelectionnee = personneActualisee;\n        }\n      }\n    });\n    // Forcer le rafraîchissement initial\n    this.chargerPersonnes();\n  }\n  chargerPersonnes() {\n    this.personneService.obtenirToutesPersonnes().subscribe({\n      next: data => {\n        console.log('Données reçues du backend:', data);\n        // Vérification des données\n        data.forEach(p => {\n          console.log(`Personne: ${p.nom} ${p.prenom}, Âge: ${p.age}, Emplois actuels: ${p.emploisActuels?.length || 0}`);\n          if (p.emploisActuels && p.emploisActuels.length > 0) {\n            p.emploisActuels.forEach(e => console.log(` - ${e.titrePoste} chez ${e.nomEntreprise}`));\n          }\n        });\n      },\n      error: e => {\n        console.error('Erreur lors du chargement des personnes', e);\n      }\n    });\n  }\n  selectionnerPersonne(personne) {\n    // Recharger la personne depuis le serveur pour s'assurer d'avoir les données à jour\n    this.personneService.obtenirPersonneParId(personne.id).subscribe({\n      next: personneActualisee => {\n        this.personneSelectionnee = personneActualisee;\n        console.log('Personne sélectionnée (actualisée):', this.personneSelectionnee);\n        if (this.personneSelectionnee?.emploisActuels) {\n          console.log(`Emplois actuels (${this.personneSelectionnee.emploisActuels.length}):`);\n          this.personneSelectionnee.emploisActuels.forEach(e => {\n            console.log(` - ${e.titrePoste} chez ${e.nomEntreprise}`);\n          });\n        } else {\n          console.log('Aucun emploi actuel');\n        }\n      },\n      error: e => {\n        console.error('Erreur lors du chargement de la personne', e);\n      }\n    });\n  }\n  trierPersonnes(personnes) {\n    return [...personnes].sort((a, b) => {\n      // Tri par nom puis par prénom\n      const comparaisonNom = a.nom.localeCompare(b.nom);\n      if (comparaisonNom !== 0) {\n        return comparaisonNom;\n      }\n      return a.prenom.localeCompare(b.prenom);\n    });\n  }\n  static {\n    this.ɵfac = function ListePersonnesComponent_Factory(t) {\n      return new (t || ListePersonnesComponent)(i0.ɵɵdirectiveInject(i1.PersonneService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ListePersonnesComponent,\n      selectors: [[\"app-liste-personnes\"]],\n      decls: 18,\n      vars: 2,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"mb-4\"], [1, \"row\"], [1, \"col-md-12\"], [1, \"list-group\", \"mb-4\"], [1, \"list-group-item\", \"list-group-item-secondary\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [2, \"width\", \"30%\"], [2, \"width\", \"10%\"], [2, \"width\", \"60%\"], [\"class\", \"list-group-item list-group-item-action d-flex justify-content-between align-items-center\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"col-md-12\", 4, \"ngIf\"], [1, \"list-group-item\", \"list-group-item-action\", \"d-flex\", \"justify-content-between\", \"align-items-center\", 3, \"click\"], [4, \"ngIf\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [\"class\", \"badge bg-success me-1\", 4, \"ngFor\", \"ngForOf\"], [1, \"badge\", \"bg-success\", \"me-1\"], [1, \"text-muted\"], [1, \"card\"], [1, \"card-header\", \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"btn\", \"btn-primary\", \"btn-sm\", 3, \"routerLink\"], [1, \"card-body\"], [1, \"mb-3\"], [3, \"personneId\"]],\n      template: function ListePersonnesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Liste des Personnes\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"strong\");\n          i0.ɵɵtext(9, \"Nom et pr\\u00E9nom\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 7)(11, \"strong\");\n          i0.ɵɵtext(12, \"\\u00C2ge\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 8)(14, \"strong\");\n          i0.ɵɵtext(15, \"Emploi(s) actuel(s)\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(16, ListePersonnesComponent_a_16_Template, 8, 7, \"a\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(17, ListePersonnesComponent_div_17_Template, 21, 11, \"div\", 10);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(16);\n          i0.ɵɵproperty(\"ngForOf\", ctx.personnes);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.personneSelectionnee);\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.ListeEmploisComponent, i2.DatePipe],\n      styles: [\".list-group-item[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  padding: 12px 15px;\\n}\\n\\n.list-group-item[_ngcontent-%COMP%]:hover {\\n  background-color: #f8f9fa;\\n}\\n\\n.list-group-item.active[_ngcontent-%COMP%] {\\n  background-color: #0d6efd;\\n  border-color: #0d6efd;\\n}\\n\\n.badge[_ngcontent-%COMP%] {\\n  padding: 6px 10px;\\n  margin-right: 5px;\\n  margin-bottom: 5px;\\n  display: inline-block;\\n  font-size: 0.85rem;\\n}\\n\\n.list-group-item-secondary[_ngcontent-%COMP%] {\\n  cursor: default;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n} \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9saXN0ZS1wZXJzb25uZXMvbGlzdGUtcGVyc29ubmVzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLHFCQUFxQjtBQUN2Qjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLmxpc3QtZ3JvdXAtaXRlbSB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHBhZGRpbmc6IDEycHggMTVweDtcclxufVxyXG5cclxuLmxpc3QtZ3JvdXAtaXRlbTpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcclxufVxyXG5cclxuLmxpc3QtZ3JvdXAtaXRlbS5hY3RpdmUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwZDZlZmQ7XHJcbiAgYm9yZGVyLWNvbG9yOiAjMGQ2ZWZkO1xyXG59XHJcblxyXG4uYmFkZ2Uge1xyXG4gIHBhZGRpbmc6IDZweCAxMHB4O1xyXG4gIG1hcmdpbi1yaWdodDogNXB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgZm9udC1zaXplOiAwLjg1cmVtO1xyXG59XHJcblxyXG4ubGlzdC1ncm91cC1pdGVtLXNlY29uZGFyeSB7XHJcbiAgY3Vyc29yOiBkZWZhdWx0O1xyXG59XHJcblxyXG4uY2FyZCB7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxufSAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","emploi_r4","titrePoste","nomEntreprise","ɵɵelementContainerStart","ɵɵtemplate","ListePersonnesComponent_a_16_ng_container_6_span_1_Template","ɵɵproperty","personne_r2","emploisActuels","ɵɵlistener","ListePersonnesComponent_a_16_Template_a_click_0_listener","ɵɵrestoreView","_r1","$implicit","ctx_r2","ɵɵnextContext","ɵɵresetView","selectionnerPersonne","ListePersonnesComponent_a_16_ng_container_6_Template","ListePersonnesComponent_a_16_span_7_Template","ɵɵclassProp","personneSelectionnee","id","nom","prenom","ɵɵtextInterpolate1","age","length","ɵɵelement","ɵɵpureFunction1","_c0","ɵɵpipeBind2","dateNaissance","tmp_5_0","undefined","ListePersonnesComponent","constructor","personneService","personnes","ngOnInit","personnes$","subscribe","console","log","trierPersonnes","personneActualisee","find","p","chargerPersonnes","obtenirToutesPersonnes","next","data","forEach","e","error","personne","obtenirPersonneParId","sort","a","b","comparaisonNom","localeCompare","ɵɵdirectiveInject","i1","PersonneService","selectors","decls","vars","consts","template","ListePersonnesComponent_Template","rf","ctx","ListePersonnesComponent_a_16_Template","ListePersonnesComponent_div_17_Template"],"sources":["C:\\Users\\samyl\\Desktop\\Web-Atrio-Test\\demo.webatrio-frontend\\src\\app\\components\\liste-personnes\\liste-personnes.component.ts","C:\\Users\\samyl\\Desktop\\Web-Atrio-Test\\demo.webatrio-frontend\\src\\app\\components\\liste-personnes\\liste-personnes.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { PersonneService } from '../../services/personne.service';\r\nimport { Personne } from '../../models/personne.model';\r\n\r\n@Component({\r\n  selector: 'app-liste-personnes',\r\n  templateUrl: './liste-personnes.component.html',\r\n  styleUrls: ['./liste-personnes.component.css']\r\n})\r\nexport class ListePersonnesComponent implements OnInit {\r\n  personnes: Personne[] = [];\r\n  personneSelectionnee: Personne | null = null;\r\n\r\n  constructor(private personneService: PersonneService) { }\r\n\r\n  ngOnInit(): void {\r\n    // S'abonner aux mises à jour des personnes\r\n    this.personneService.personnes$.subscribe(personnes => {\r\n      console.log('Mise à jour des personnes reçue:', personnes);\r\n      this.personnes = this.trierPersonnes(personnes);\r\n      \r\n      // Si une personne était sélectionnée, mettre à jour sa version\r\n      if (this.personneSelectionnee) {\r\n        const personneActualisee = personnes.find(p => p.id === this.personneSelectionnee?.id);\r\n        if (personneActualisee) {\r\n          this.personneSelectionnee = personneActualisee;\r\n        }\r\n      }\r\n    });\r\n    \r\n    // Forcer le rafraîchissement initial\r\n    this.chargerPersonnes();\r\n  }\r\n\r\n  chargerPersonnes(): void {\r\n    this.personneService.obtenirToutesPersonnes().subscribe({\r\n      next: (data) => {\r\n        console.log('Données reçues du backend:', data);\r\n        \r\n        // Vérification des données\r\n        data.forEach(p => {\r\n          console.log(`Personne: ${p.nom} ${p.prenom}, Âge: ${p.age}, Emplois actuels: ${p.emploisActuels?.length || 0}`);\r\n          if (p.emploisActuels && p.emploisActuels.length > 0) {\r\n            p.emploisActuels.forEach(e => console.log(` - ${e.titrePoste} chez ${e.nomEntreprise}`));\r\n          }\r\n        });\r\n      },\r\n      error: (e) => {\r\n        console.error('Erreur lors du chargement des personnes', e);\r\n      }\r\n    });\r\n  }\r\n\r\n  selectionnerPersonne(personne: Personne): void {\r\n    // Recharger la personne depuis le serveur pour s'assurer d'avoir les données à jour\r\n    this.personneService.obtenirPersonneParId(personne.id!).subscribe({\r\n      next: (personneActualisee) => {\r\n        this.personneSelectionnee = personneActualisee;\r\n        console.log('Personne sélectionnée (actualisée):', this.personneSelectionnee);\r\n        if (this.personneSelectionnee?.emploisActuels) {\r\n          console.log(`Emplois actuels (${this.personneSelectionnee.emploisActuels.length}):`);\r\n          this.personneSelectionnee.emploisActuels.forEach(e => {\r\n            console.log(` - ${e.titrePoste} chez ${e.nomEntreprise}`);\r\n          });\r\n        } else {\r\n          console.log('Aucun emploi actuel');\r\n        }\r\n      },\r\n      error: (e) => {\r\n        console.error('Erreur lors du chargement de la personne', e);\r\n      }\r\n    });\r\n  }\r\n  \r\n  private trierPersonnes(personnes: Personne[]): Personne[] {\r\n    return [...personnes].sort((a, b) => {\r\n      // Tri par nom puis par prénom\r\n      const comparaisonNom = a.nom.localeCompare(b.nom);\r\n      if (comparaisonNom !== 0) {\r\n        return comparaisonNom;\r\n      }\r\n      return a.prenom.localeCompare(b.prenom);\r\n    });\r\n  }\r\n} ","<div class=\"container mt-4\">\r\n  <h2 class=\"mb-4\">Liste des Personnes</h2>\r\n  \r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"list-group mb-4\">\r\n        <div class=\"list-group-item list-group-item-secondary d-flex justify-content-between align-items-center\">\r\n          <div style=\"width: 30%\"><strong>Nom et prénom</strong></div>\r\n          <div style=\"width: 10%\"><strong>Âge</strong></div>\r\n          <div style=\"width: 60%\"><strong>Emploi(s) actuel(s)</strong></div>\r\n        </div>\r\n        <a *ngFor=\"let personne of personnes\" \r\n           (click)=\"selectionnerPersonne(personne)\"\r\n           class=\"list-group-item list-group-item-action d-flex justify-content-between align-items-center\"\r\n           [class.active]=\"personneSelectionnee && personneSelectionnee.id === personne.id\">\r\n          <div style=\"width: 30%\">{{ personne.nom }} {{ personne.prenom }}</div>\r\n          <div style=\"width: 10%\">{{ personne.age }} ans</div>\r\n          <div style=\"width: 60%\">\r\n            <ng-container *ngIf=\"personne.emploisActuels && personne.emploisActuels.length > 0\">\r\n              <span *ngFor=\"let emploi of personne.emploisActuels\" class=\"badge bg-success me-1\">\r\n                {{ emploi.titrePoste }} chez {{ emploi.nomEntreprise }}\r\n              </span>\r\n            </ng-container>\r\n            <span *ngIf=\"!personne.emploisActuels || personne.emploisActuels.length === 0\" class=\"text-muted\">\r\n              Aucun emploi actuel\r\n            </span>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"col-md-12\" *ngIf=\"personneSelectionnee\">\r\n      <div class=\"card\">\r\n        <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n          <h3>Détails de {{ personneSelectionnee.prenom }} {{ personneSelectionnee.nom }}</h3>\r\n          <a [routerLink]=\"['/emploi/nouveau', personneSelectionnee.id]\" class=\"btn btn-primary btn-sm\">\r\n            Ajouter un emploi\r\n          </a>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <div class=\"mb-3\">\r\n            <p><strong>Date de naissance:</strong> {{ personneSelectionnee.dateNaissance | date:'dd/MM/yyyy' }}</p>\r\n            <p><strong>Âge:</strong> {{ personneSelectionnee.age }} ans</p>\r\n          </div>\r\n          \r\n          <h4>Tous les emplois</h4>\r\n          <app-liste-emplois [personneId]=\"personneSelectionnee.id ?? null\"></app-liste-emplois>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}