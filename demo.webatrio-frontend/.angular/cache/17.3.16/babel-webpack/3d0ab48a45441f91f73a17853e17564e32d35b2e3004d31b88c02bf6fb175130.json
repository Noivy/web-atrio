{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { PersonneFormComponent } from './components/personne-form/personne-form.component';\nimport { ListePersonnesComponent } from './components/liste-personnes/liste-personnes.component';\nimport { ListeEmploisComponent } from './components/liste-emplois/liste-emplois.component';\nimport { EmploiFormComponent } from './components/emploi-form/emploi-form.component';\nimport { HttpResponse } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\n// Intercepteur pour déboguer les réponses API\nexport class DebugInterceptor {\n  intercept(req, next) {\n    return next.handle(req).pipe(tap(event => {\n      if (event instanceof HttpResponse) {\n        console.log('API Response for:', req.url);\n        console.log('Status:', event.status);\n        console.log('Body:', JSON.stringify(event.body));\n        // Vérifier spécifiquement les emploisActuels\n        if (Array.isArray(event.body)) {\n          event.body.forEach(item => {\n            if (item.emploisActuels) {\n              console.log(`Emplois pour ${item.prenom} ${item.nom}:`, item.emploisActuels);\n            }\n          });\n        } else if (event.body && event.body.emploisActuels) {\n          console.log(`Emplois pour ${event.body.prenom} ${event.body.nom}:`, event.body.emploisActuels);\n        }\n      }\n    }));\n  }\n  static {\n    this.ɵfac = function DebugInterceptor_Factory(t) {\n      return new (t || DebugInterceptor)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DebugInterceptor,\n      factory: DebugInterceptor.ɵfac\n    });\n  }\n}\nconst routes = [{\n  path: '',\n  redirectTo: '/personnes',\n  pathMatch: 'full'\n}, {\n  path: 'personnes',\n  component: ListePersonnesComponent\n}, {\n  path: 'nouvelle-personne',\n  component: PersonneFormComponent\n}, {\n  path: 'emploi/nouveau/:personneId',\n  component: EmploiFormComponent\n}];\nexport class AppModule {\n  static {\n    this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [{\n        provide: HTTP_INTERCEPTORS,\n        useClass: DebugInterceptor,\n        multi: true\n      }],\n      imports: [BrowserModule, HttpClientModule, FormsModule, ReactiveFormsModule, RouterModule.forRoot(routes)]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppModule, {\n    declarations: [AppComponent, PersonneFormComponent, ListePersonnesComponent, ListeEmploisComponent, EmploiFormComponent],\n    imports: [BrowserModule, HttpClientModule, FormsModule, ReactiveFormsModule, i1.RouterModule]\n  });\n})();","map":{"version":3,"names":["BrowserModule","HttpClientModule","HTTP_INTERCEPTORS","FormsModule","ReactiveFormsModule","RouterModule","AppComponent","PersonneFormComponent","ListePersonnesComponent","ListeEmploisComponent","EmploiFormComponent","HttpResponse","tap","DebugInterceptor","intercept","req","next","handle","pipe","event","console","log","url","status","JSON","stringify","body","Array","isArray","forEach","item","emploisActuels","prenom","nom","factory","ɵfac","routes","path","redirectTo","pathMatch","component","AppModule","bootstrap","provide","useClass","multi","imports","forRoot","declarations","i1"],"sources":["C:\\Users\\samyl\\Desktop\\Web-Atrio-Test\\demo.webatrio-frontend\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PersonneFormComponent } from './components/personne-form/personne-form.component';\r\nimport { ListePersonnesComponent } from './components/liste-personnes/liste-personnes.component';\r\nimport { ListeEmploisComponent } from './components/liste-emplois/liste-emplois.component';\r\nimport { EmploiFormComponent } from './components/emploi-form/emploi-form.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n// Intercepteur pour déboguer les réponses API\r\n@Injectable()\r\nexport class DebugInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      tap(event => {\r\n        if (event instanceof HttpResponse) {\r\n          console.log('API Response for:', req.url);\r\n          console.log('Status:', event.status);\r\n          console.log('Body:', JSON.stringify(event.body));\r\n          \r\n          // Vérifier spécifiquement les emploisActuels\r\n          if (Array.isArray(event.body)) {\r\n            event.body.forEach((item: any) => {\r\n              if (item.emploisActuels) {\r\n                console.log(`Emplois pour ${item.prenom} ${item.nom}:`, item.emploisActuels);\r\n              }\r\n            });\r\n          } else if (event.body && event.body.emploisActuels) {\r\n            console.log(`Emplois pour ${event.body.prenom} ${event.body.nom}:`, event.body.emploisActuels);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/personnes', pathMatch: 'full' },\r\n  { path: 'personnes', component: ListePersonnesComponent },\r\n  { path: 'nouvelle-personne', component: PersonneFormComponent },\r\n  { path: 'emploi/nouveau/:personneId', component: EmploiFormComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PersonneFormComponent,\r\n    ListePersonnesComponent,\r\n    ListeEmploisComponent,\r\n    EmploiFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: DebugInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { } "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}